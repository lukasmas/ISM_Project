/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.13).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Event;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-04-19T19:22:40.372Z")

@Api(value = "events", description = "the events API")
@RequestMapping(value = "/index")
public interface EventsApi {

    @ApiOperation(value = "Create event", nickname = "createEvent", notes = "Can be created by logged in user", tags={ "event", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Incorrect data"),
        @ApiResponse(code = 404, message = "Events cannot be created") })
    @RequestMapping(value = "/events/createEvent",
        produces = {"application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<Void> createEvent(@ApiParam(value = "Contain full event in JSON" ,required=true )  @Valid @RequestBody Event event) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Delete event", nickname = "deleteEvent", notes = "Can be deleted by logged in owner", tags={ "event", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Incorrect data"),
        @ApiResponse(code = 404, message = "Events cannot be created") })
    @RequestMapping(value = "/events/deleteEvent/{eventId}",
        produces = {"application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Void> deleteEvent(@ApiParam(value = "",required=true) @PathVariable("eventId") String eventId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Edit event", nickname = "editEvent", notes = "Can be eddit by logged in owner", tags={ "event", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Incorrect data"),
        @ApiResponse(code = 404, message = "Events cannot be created") })
    @RequestMapping(value = "/events/editEvent",
        produces = {"application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<Void> editEvent(@ApiParam(value = "Contain full event in JSON" ,required=true )  @Valid @RequestBody Event event) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
